- name: create instance {{ item.key }}
  command: tomcat9-instance-create -p {{ item.value.port }} -c {{ item.value.control_port }} {{ tomcat_basedir }}/{{ item.key }} creates={{ tomcat_basedir }}/{{ item.key }}
  with_dict: "{{ tomcat_instances }}"
  when: package_manager == "apt"  

- name: create instance {{ item.key }}
  file:
    src: /usr/share/tomcat/bin
    dest: "{{ tomcat_basedir }}//{{ item.key }}//bin"
    state: directory
  with_dict: "{{ tomcat_instances }}"
  when: package_manager == "yum"  

- name: create instance {{ item.key }}
  file:
    src: /etc/tomcat/
    dest: "{{ tomcat_basedir }}//{{ item.key }}//conf"
    state: directory
  with_dict: "{{ tomcat_instances }}"
  when: package_manager == "yum"

  
- name: Create a directory if it does not exist
  file:
    path: "{{ tomcat_basedir }}/{{ item.0 }}/{{ item.1 }}"
    state: directory
    mode: '0755'
  with_nested:
    - "{{ tomcat_instances|list }}"
    - [ logs, temp, work, webapps ]
  when: package_manager == "yum"    

- name: symlink policy.d dir
  file:
    src: "/etc/{{ tomcat_service_name }}/policy.d/"
    dest: "{{ tomcat_basedir }}/{{ item.key }}/conf/policy.d"
    state: link
  with_dict: "{{ tomcat_instances }}"
  when: package_manager == "apt"

- name: recursively fix dirs ownership
  file:
    name: "{{ tomcat_basedir }}/{{ item.0 }}/{{ item.1 }}"
    state: directory
    recurse: yes
    owner: tomcat
  with_nested:
    - "{{ tomcat_instances|list }}"
    - [ logs, temp, conf, work, webapps ]

- name: install instance config in /etc/default
  template:
    src: "config-{{ item.key }}.j2"
    dest: "/etc/default/tomcat-{{ item.key }}"
  with_dict: "{{ tomcat_instances }}"

- name: install instance connector
  template:
    src: "server-{{ item.key }}.xml.j2"
    dest: "{{ tomcat_basedir }}/{{ item.key }}/conf/server.xml"
  with_dict: "{{ tomcat_instances }}"

- name: enable instance
  systemd:
    name: "tomcat@{{ item.key }}"
    enabled: yes
  with_dict: "{{ tomcat_instances }}"
