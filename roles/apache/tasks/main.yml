- name: installing apache2
  package: 
    name: "{{ apache_package_name }}"
    state: present
    use: "{{ package_manager }}"    

- name: installing openssl
  package: 
    name: openssl, mod_ssl
    state: present
    use: "{{ package_manager }}" 

- name: disable the default site
  file:
    path: "/etc/{{ apache_service_name }}/sites-enabled/{{ item }}"
    state: absent
  with_items:
  - 000-default
  - default-ssl
  notify: reload apache2
  when: package_manager == "apt" 

- name: disable the default site Centos
  file:
    path: "/etc/{{ apache_service_name }}/conf.d/{{ item }}"
    state: absent
  with_items:
  - welcome.conf
  notify: reload apache2
  when: package_manager == "yum" 

- name: enable required modules
  apache2_module:
    name: "{{ item }}"
    state: present
  with_items:
  - proxy_http
  - proxy
  - rewrite
  - headers
  - deflate
  - ssl
  register: apache_modules

- name: reload apache2 if needed
  service:
    name: "{{ apache_service_name }}"
    state: reloaded
  when: apache_modules is changed

- name: template georchestra vhost
  template:
    src: georchestra.j2
    dest:  "/etc/{{ apache_service_name }}/conf.d/georchestra.conf"
  notify: reload apache2
  when: package_manager == "yum" 

- name: template georchestra vhost
  template:
    src: georchestra.j2
    dest:  "/etc/{{ apache_service_name }}/sites-available/georchestra.conf"
  notify: reload apache2
  when: package_manager == "apt" 

- name: enable georchestra vhost
  file:
    dest:  "/etc/{{ apache_service_name }}/sites-enabled/georchestra.conf"
    src:  "/etc/{{ apache_service_name }}/sites-available/georchestra.conf"
    state: link
    owner: root
    group: root
  notify: reload apache2
  when: package_manager == "apt" 

- name: create web directories
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - /var/www/georchestra/
    - /var/www/georchestra/conf/
    - /var/www/georchestra/ssl/

- name: create logs directories
  file:
    name: /var/www/georchestra/logs/
    state: directory
    group: "{{ apache_user_name }}"
    mode: 0775

- name: clone htdocs dir
  git:
    repo: https://github.com/georchestra/htdocs.git
    dest: /var/www/georchestra/htdocs/
    version: master
    accept_hostkey: yes

- name: fetch 50x.html error page
  get_url:
    dest: /var/www/georchestra/htdocs/errors/50x.html
    url: https://raw.githubusercontent.com/georchestra/htdocs/master/errors/50x.html

- name: template config fragments
  tags: apache_config
  template:
    src: "{{ item.src }}.conf.j2"
    dest: "/var/www/georchestra/conf/{{ item.dest }}.conf"
  with_items:
  - { src: global, dest: global }
  - { src: common, dest: proxy }
  - { src: common, dest: _static }
  - { src: common, dest: cas }
  - { src: common, dest: analytics }
  - { src: common, dest: extractorapp }
  - { src: common, dest: geonetwork }
  - { src: common, dest: geoserver }
  - { src: common, dest: geowebcache }
  - { src: common, dest: header }
  - { src: common, dest: console }
  - { src: common, dest: mapstore }
  - { src: common, dest: mapfishapp }
  - { src: common, dest: cadastrapp }
  - { src: common, dest: mviewer }
  notify: reload apache2

- name: generate self-signed cert
  command: >
    openssl req -new -nodes -x509 -subj "/C=FR/L=Somewhere/O=IT/CN={{ georchestra.fqdn }}"
      -days 3650 -keyout /var/www/georchestra/ssl/georchestra.key -out /var/www/georchestra/ssl/georchestra.crt -extensions v3_ca
    creates=/var/www/georchestra/ssl/georchestra.crt
  when: existing_certificate_path_crt is not defined or existing_certificate_path_crt == "none" 

- name: copy existing certificate key
  copy:
      src: "{{ existing_certificate_path_key }}"
      dest: /var/www/georchestra/ssl/georchestra.key
      remote_src: yes
  when: existing_certificate_path_key != "none"

- name: copy existing certificate crt
  copy:
      src: "{{ existing_certificate_path_crt }}"
      dest: /var/www/georchestra/ssl/georchestra.crt
      remote_src: yes
  when: existing_certificate_path_crt != "none"

- name: fix perms on certificate
  file:
    path: /var/www/georchestra/ssl/georchestra.key
    mode: 0400

- name: install ca-certificates
  package: 
    name: "{{ cacertificate_package_name }}"
    state: present
    use: "{{ package_manager }}"

- name: update cacert trust
  command: 
    update-ca-trust force-enable 
  when: package_manager == "yum" 

- include: clean.yml
  tags: [cleanup, apache_cleanup]
  when: cleanup is defined
